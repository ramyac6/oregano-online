{"version":3,"sources":["serviceWorker.js","Header.js","Rating.js","BasicInfo.js","RealComp.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","type","onClick","props","displayHome","Component","Rating","state","val","ac","this","rating","renderStar","BasicInfo","showModel","renderModel","name","add","RealApp","page","modelName","modelAdd","modelRate","bool","a","b","c","setState","setPage","displayOvo","displayLacto","displayVegan","displayGluten","placeholder","bind","rel","href","renderPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0c70b4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport './Header.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"Header\">\r\n            <div className=\"Headertext\"> \r\n                Oregano\r\n            </div>\r\n            <div className=\"home_button_div\">\r\n            <button className={\"homebutton\"} type=\"button\" onClick={() => {this.props.displayHome('Home')}}>Home</button>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Rating extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {}\r\n    }\r\n\r\n    renderStar(val) {\r\n        let ac = \"\";\r\n        if (this.props.rating >= val) {\r\n            ac = \"checked\";\r\n        }\r\n        return (\r\n            <span className={\"fa fa-star \" + ac}></span>\r\n        );  \r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className={\"subtextright\"}>\r\n          Rating: \r\n          {this.renderStar(1)}\r\n          {this.renderStar(2)}\r\n          {this.renderStar(3)}\r\n          {this.renderStar(4)}\r\n          {this.renderStar(5)}\r\n        </div> \r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Rating;","\r\nimport './BasicInfo.css';\r\nimport React, { Component } from 'react';\r\nimport Rating from './Rating'\r\n\r\nclass BasicInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModel: false\r\n    }\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div className={\"subtextContainer\"} onClick={() => {this.props.renderModel(true, this.props.name, this.props.add, this.props.rating)}}>\r\n        <div className={\"subtextleft subtext\"}>\r\n          {this.props.name}<br></br>\r\n          {this.props.add}\r\n        </div>\r\n        <div className={\"subtextright subtext\"}>\r\n          <Rating rating={this.props.rating}/><br></br>\r\n          <div className={\"subtextright_advanced\"}>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default BasicInfo;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport BasicInfo from './BasicInfo';\r\n\r\nclass RealApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            showModel: false,\r\n            modelName: \"\",\r\n            modelAdd: \"\",\r\n            modelRate: 3\r\n        }\r\n    }\r\n\r\n    renderModel(bool, a, b, c) {\r\n        this.setState( (c) => {\r\n            c.showModel = bool;\r\n            c.modelName = a;\r\n            c.modelAdd = b;\r\n            c.modelRate = c;\r\n            return c;\r\n        });\r\n    }\r\n\r\n    displayOvo(name) {\r\n        this.setPage(1);\r\n    }\r\n\r\n    displayLacto(name) {\r\n        this.setPage(2);\r\n    }\r\n\r\n    displayVegan(name) {\r\n        this.setPage(3);\r\n    }\r\n\r\n    displayGluten(name) {\r\n        this.setPage(4);\r\n    }\r\n\r\n    displayHome(name) {\r\n        this.setPage(0);\r\n    }\r\n\r\n    setPage(page) {\r\n        this.setState( (c) => {\r\n            c.page = page;\r\n            return c;\r\n        });\r\n    }\r\n\r\n    renderPage() {\r\n        if (this.state.page === 0) { // the home page\r\n            return (\r\n                <div className={\"bigBrain_main\"}>\r\n                    <div className={\"headertext\"}>\r\n                        <div>\r\n                            Oregano   \r\n                        </div>\r\n                        <div className={\"buttons\"}>\r\n                            <button className={\"button\"} type=\"button\" onClick={() => {this.displayOvo('Ovo-Lacto-Vegetarian')}}>Ovo-Lacto-Vegetarian</button>&nbsp;\r\n                            <button className={\"button\"} type=\"button\" onClick={() => {this.displayLacto('Vegetarian')}}>Lacto-Vegetarian</button>&nbsp;\r\n                            <button className={\"button\"} type=\"button\" onClick={() => {this.displayVegan('Vegan')}}>Vegan</button>&nbsp;\r\n                            <button className={\"button\"} type=\"button\" onClick={() => {this.displayGluten('Gluten Free')}}>Gluten-Free</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (this.state.page === 1) {\r\n            return (\r\n                <div className={\"bigBrain_sub\"}>\r\n                    <div className={\"subpage\"}>\r\n                        <div  className={\"subheader_text\"}>\r\n                            Ovo-Lacto-Vegetarian\r\n                        </div>\r\n                        <div className={\"searchbar\"}>\r\n                                <input type=\"text\" placeholder=\"Search..\"></input>\r\n                        </div>\r\n                        <BasicInfo \r\n                            name={\"Cafe Flora\"} \r\n                            add={\"2901 E Madison St, Seattle, WA 98112\"}\r\n                            rating={5}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Sunlight Cafe\"}\r\n                            add={\"6404 9th Ave NE, Seattle, WA 98115\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"World Pizza\"}\r\n                            add={\"672 S King St, Seattle, WA 98104\"}\r\n                            rating={5}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.page === 2) {\r\n            return (\r\n                <div className={\"bigBrain_sub\"}>\r\n                    <div className={\"subpage\"}>\r\n                        <div  className={\"subheader_text\"}>\r\n                            Lacto-Vegetarian\r\n                        </div>\r\n                        <div className={\"searchbar\"}>\r\n                                <input type=\"text\" placeholder=\"Search..\"></input>\r\n                        </div>\r\n                        <BasicInfo \r\n                            name={\"Cafe Flora\"} \r\n                            add={\"2901 E Madison St, Seattle, WA 98112\"}\r\n                            rating={5}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Anar\"}\r\n                            add={\"2040 6th Ave, Seattle, WA 98121\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"JaK's Grill\"}\r\n                            add={\"3701 NE 45th St, Seattle, WA 98105\"}\r\n                            rating={2}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.page === 3) {\r\n            return (\r\n                <div className={\"bigBrain_sub\"}>\r\n                    <div className={\"subpage\"}>\r\n                        <div  className={\"subheader_text\"}>\r\n                            Vegan\r\n                        </div>\r\n                        <div className={\"searchbar\"}>\r\n                                <input type=\"text\" placeholder=\"Search..\"></input>\r\n                        </div>\r\n                        <BasicInfo \r\n                            name={\"Harvest Beat\"} \r\n                            add={\"1711 N 45th St, Seattle, WA 98103\"}\r\n                            rating={5}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Wayward Vegan Cafe\"}\r\n                            add={\"801 NE 65th St, Seattle, WA 98115\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Pizza Pi Vegan Pizzeria\"}\r\n                            add={\"5500 University Way, Seattle, WA 98105\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.page === 4) {\r\n            return (\r\n                <div className={\"bigBrain_sub\"}>\r\n                    <div className={\"subpage\"}>\r\n                        <div  className={\"subheader\"}>\r\n                            <div className={\"subheader_text\"}>\r\n                                Gluten-Free\r\n                            </div>\r\n                        </div>\r\n                        <div className={\"searchbar\"}>\r\n                                <input type=\"text\" placeholder=\"Search..\"></input>\r\n                        </div>\r\n                        <BasicInfo \r\n                            name={\"Niche Gluten Free Cafe & Bakery\"} \r\n                            add={\"808 12th Ave, Seattle, WA 98122\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Nuflours Bakery\"}\r\n                            add={\"518 15th Ave E, Seattle, WA 98112\"}\r\n                            rating={5}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                        <BasicInfo \r\n                            name={\"Capital Cider\"}\r\n                            add={\"818 E Pike St, Seattle, WA 98122\"}\r\n                            rating={4}\r\n                            renderModel={this.renderModel.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\"\"); // an empty page\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n        <div className=\"App\">\r\n            {this.state.showModel ? (\r\n                <div className={\"modelBox\"} onClick={() => {this.renderModel(false)}}>\r\n                    <div className={\"innerModelBox\"}>\r\n                        <div className={\"modelName\"}>\r\n                            {this.state.modelName}\r\n                        </div>\r\n                        <div className={\"modelName\"}>\r\n                            {this.state.modelAdd}\r\n                        </div>\r\n                        <div className={\"floatingLeft\"}>\r\n                            <div>Website here ...</div>\r\n                            <div>Menu here ... </div>\r\n                            <div>Rating here ... </div>\r\n                            <div>Reviews here ... </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\"\")}\r\n            <Header displayHome={this.displayHome.bind(this)}/>\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n            {this.renderPage()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RealApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport RealApp from './RealComp';\r\n\r\n\r\nReactDOM.render(<RealApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}